# GENERATE TIME: Fri Apr 26 11:40:35 2024
# CMD:
# realesrgan/train.py -opt .\options\finetune_realesrnet_x4plus.yml --auto_resume

# general settings
name: finetune_RealESRNetx4plus_300k_B12G4
model_type: RealESRNetModel
scale: 4
num_gpu: auto
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRGANModel ----------------- #
# USM the ground-truth
gt_usm: True

# the first degradation process
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.2, 1.5]
gaussian_noise_prob: 0.5
noise_range: [1, 20]
poisson_scale_range: [0.05, 2]
gray_noise_prob: 0.4
jpeg_range: [50, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0.5
noise_range2: [1, 15]
poisson_scale_range2: [0.05, 1.5]
gray_noise_prob2: 0.4
jpeg_range2: [70, 95]

gt_size: 512
queue_size: 176

# dataset and data loader settings
datasets:
  train:
    name: FFHQ_train
    type: FFHQsubDataset
    dataroot_gt: data/FFHQ/train/GT
    meta_info: data/FFHQ/train/meta_info_FFHQ5000sub_GT.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 512
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: FFHQ_val
    type: PairedImageDataset
    dataroot_gt: data/FFHQ/val/GT
    dataroot_lq: data/FFHQ/val/LQ
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 32
  num_block: 11
  num_grow_ch: 16


# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/train_RealESRNetx4plus_300k_B12G4/models/net_g_1085000.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
#  perceptual_opt:
#    type: PerceptualLoss
#    layer_weights:
#      # before relu
#      'conv1_2': 0.1
#      'conv2_2': 0.1
#      'conv3_4': 1
#      'conv4_4': 1
#      'conv5_4': 1
#    vgg_type: vgg19
#    use_input_norm: true
#    perceptual_weight: !!float 1.0
#    style_weight: 0
#    range_norm: false
#    criterion: l1
  # gan loss
#  gan_opt:
#    type: GANLoss
#    gan_type: vanilla
#    real_label_val: 1.0
#    fake_label_val: 0.0
#    loss_weight: !!float 1e-1

#  net_d_iters: 1
#  net_d_init_iters: 0

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
      better: higher  # the higher, the better. Default: higher
    niqe:
      type: calculate_ssim
      crop_border: 4
      better: higher  # the lower, the better

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
